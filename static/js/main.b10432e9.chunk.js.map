{"version":3,"sources":["components/Modal/Modal.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Input/Input.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.jsx","services/ImagesApi.js","components/Loader/Loader.jsx","components/Input/Input.jsx","components/ImageErrorView/Error.png","components/ImageErrorView/ImageErrorView.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/Modal.js","components/ImageInfo/ImageInfo.jsx","components/ImageFinder/ImageFinder.jsx","App.jsx","index.jsx","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","state","searchQuery","page","handleInputChange","event","value","target","setState","handleSubmit","preventDefault","trim","toast","error","props","onSubmit","this","className","s","SearchForm","type","button","buttonLabel","SearchInput","autoComplete","autoFocus","placeholder","onChange","Component","BASE_URL","KEY","api","fetchImage","searchImg","searchParams","URLSearchParams","q","image_type","orientation","per_page","key","url","fetch","then","response","ok","json","Promise","reject","Error","LoaderImage","color","height","width","timeout","Input","text","ImageErrorView","message","role","src","errorImage","alt","ImageGalleryItem","largeImageURL","description","onImgClick","GalleryItem","data-source","GalleryItemImage","onClick","e","currentTarget","ImageGallery","hits","map","id","webformatURL","tags","Button","onBtnClick","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","window","addEventListener","removeEventListener","largeImgUrl","imgAlt","createPortal","overlay","modal","image","ImageInfo","images","status","showBtn","loading","showModal","URL","ALT","fetchImages","currentQuery","query","currentPage","imageAPI","length","prevState","catch","finally","toggleModal","handleImgClick","img","dataset","source","prevProps","clientHeight","snapshot","scrollTo","top","behavior","ImageFinder","handleFormSubmit","autoClose","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b10432e9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__YQ3E6\",\"modal\":\"Modal_modal__2VMty\",\"image\":\"Modal_image__LKmJA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GalleryItem\":\"ImageGalleryItem_GalleryItem__2s7bS\",\"GalleryItemImage\":\"ImageGalleryItem_GalleryItemImage__3iUXH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Input_text__2SuVU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2W8eU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2_4SF\"};","import React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport s from './Searchbar.module.css';\r\n\r\nexport default class Searchbar extends Component {\r\n   state = {\r\n      searchQuery: '',\r\n      page: 0,\r\n   };\r\n\r\n   handleInputChange = event => {\r\n      const { value } = event.target;\r\n\r\n      this.setState({\r\n         searchQuery: value,\r\n      });\r\n   };\r\n\r\n   handleSubmit = event => {\r\n      event.preventDefault();\r\n      const { searchQuery } = this.state;\r\n\r\n      if (searchQuery.trim() === '') {\r\n         return toast.error('Please, enter your search query!');\r\n      }\r\n\r\n      this.props.onSubmit(searchQuery);\r\n\r\n      this.setState({\r\n         searchQuery: '',\r\n      });\r\n   };\r\n\r\n   render() {\r\n      const { searchQuery } = this.state;\r\n      return (\r\n         <header className={s.Searchbar}>\r\n            <form className={s.SearchForm} onSubmit={this.handleSubmit}>\r\n               <button type=\"submit\" className={s.button}>\r\n                  <span className={s.buttonLabel}>Search</span>\r\n               </button>\r\n\r\n               <input\r\n                  className={s.SearchInput}\r\n                  type=\"text\"\r\n                  autoComplete=\"off\"\r\n                  autoFocus\r\n                  placeholder=\"Search images and photos\"\r\n                  value={searchQuery}\r\n                  onChange={this.handleInputChange}\r\n               />\r\n            </form>\r\n         </header>\r\n      );\r\n   }\r\n}","const BASE_URL = 'https://pixabay.com/api/';\r\nconst KEY = '19151711-be14d41e7a0bdcd70a93cb54b';\r\n\r\nfunction fetchImage(searchImg, page = 0) {\r\n   const searchParams = new URLSearchParams({\r\n      q: searchImg,\r\n      image_type: 'photo',\r\n      orientation: 'horizontal',\r\n      page: page,\r\n      per_page: 12,\r\n      key: KEY,\r\n   });\r\n\r\n   const url = `${BASE_URL}?${searchParams}`;\r\n\r\n   return fetch(url).then(response => {\r\n      if (response.ok) {\r\n         return response.json();\r\n      }\r\n\r\n      return Promise.reject(\r\n         new Error(`Bad search query :( We have no ${searchImg} images`),\r\n      );\r\n   });\r\n}\r\n\r\nconst api = { fetchImage };\r\nexport default api;","import { Component } from 'react'\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nexport default class LoaderImage extends Component {\r\n   render() {\r\n      return (\r\n         <div>\r\n            <Loader\r\n               type=\"Puff\"\r\n               color=\"#00BFFF\"\r\n               height={100}\r\n               width={100}\r\n               timeout={3000} //3 secs\r\n            />\r\n         Загружаем...\r\n         </div>\r\n      )\r\n   }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Input.module.css';\r\n\r\nconst Input = ({ text }) => {\r\n   return <p className={s.text}>{text}</p>;\r\n};\r\n\r\nInput.propTypes = {\r\n   text: PropTypes.string,\r\n};\r\n\r\nexport default Input;","export default __webpack_public_path__ + \"static/media/Error.8ab2c9d7.png\";","import errorImage from './Error.png'\r\n\r\nexport default function ImageErrorView({ message }) {\r\n\r\n   return (\r\n      <div role=\"alert\">\r\n         <img src={errorImage} alt=\"error\" width=\"240\" />\r\n         <p>{message}</p>\r\n      </ div>\r\n   )\r\n\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ImageGalleryItem.module.css';\r\n\r\nconst ImageGalleryItem = ({ url, largeImageURL, description, onImgClick }) => {\r\n   return (\r\n      <li className={s.GalleryItem}>\r\n         <img\r\n            src={url}\r\n            data-source={largeImageURL}\r\n            alt={description}\r\n            className={s.GalleryItemImage}\r\n            onClick={e => onImgClick(e.currentTarget)}\r\n         />\r\n      </li>\r\n   );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n   url: PropTypes.string,\r\n   largeImageURL: PropTypes.string,\r\n   description: PropTypes.string,\r\n   onImgClick: PropTypes.func,\r\n};\r\n\r\nexport default ImageGalleryItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from 'components/ImageGalleryItem/ImageGalleryItem';\r\nimport s from './ImageGallery.module.css';\r\n\r\nconst ImageGallery = ({ hits, onClick }) => {\r\n   return (\r\n      <ul className={s.ImageGallery}>\r\n         {hits.map(({ id, webformatURL, largeImageURL, tags }) => {\r\n            return (\r\n               <ImageGalleryItem\r\n                  key={id}\r\n                  url={webformatURL}\r\n                  largeImageURL={largeImageURL}\r\n                  description={tags}\r\n                  onImgClick={onClick}\r\n               />\r\n            );\r\n         })}\r\n      </ul>\r\n   );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n   hits: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n         id: PropTypes.number.isRequired,\r\n      }),\r\n   ),\r\n};\r\n\r\nexport default ImageGallery;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Button.module.css';\r\n\r\nconst Button = ({ onBtnClick }) => {\r\n   return (\r\n      <button type=\"button\" className={s.Button} onClick={onBtnClick}>\r\n         Load more\r\n      </button>\r\n   );\r\n};\r\n\r\nButton.propTypes = {\r\n   onBtnClick: PropTypes.func,\r\n};\r\n\r\nexport default Button;","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport s from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n   componentDidMount() {\r\n      window.addEventListener('keydown', this.handleKeyDown);\r\n   }\r\n\r\n   componentWillUnmount() {\r\n      window.removeEventListener('keydown', this.handleKeyDown);\r\n   }\r\n\r\n   handleKeyDown = e => {\r\n      if (e.code === 'Escape') {\r\n         this.props.onClose();\r\n      }\r\n   };\r\n\r\n   handleBackdropClick = e => {\r\n      if (e.currentTarget === e.target) {\r\n         this.props.onClose();\r\n      }\r\n   };\r\n\r\n   render() {\r\n      const { largeImgUrl, imgAlt } = this.props;\r\n\r\n      return createPortal(\r\n         <div className={s.overlay} onClick={this.handleBackdropClick}>\r\n            <div className={s.modal}>\r\n               <img className={s.image} src={largeImgUrl} alt={imgAlt} />\r\n            </div>\r\n         </div>,\r\n         modalRoot,\r\n      );\r\n   }\r\n}","import { Component } from 'react';\r\nimport imageAPI from 'services/ImagesApi';\r\nimport LoaderImage from 'components/Loader/Loader';\r\nimport Input from 'components/Input/Input'\r\nimport ImageErrorView from 'components/ImageErrorView/ImageErrorView';\r\nimport ImageGallery from 'components/ImageGallery/ImageGallery';\r\nimport Button from 'components/Button/Button';\r\nimport Modal from 'components/Modal/Modal'\r\n\r\nexport default class ImageInfo extends Component {\r\n   state = {\r\n      images: [],\r\n      status: 'idle',\r\n      error: null,\r\n      page: 1,\r\n      showBtn: true,\r\n      loading: false,\r\n      showModal: false,\r\n      URL: '',\r\n      ALT: '',\r\n   };\r\n\r\n   getSnapshotBeforeUpdate(prevProps, prevState) {\r\n      const prevImages = prevState.images;\r\n\r\n      if (prevImages.length > 0) {\r\n         const listRef = document.querySelector('ul');\r\n         return listRef.clientHeight;\r\n      }\r\n\r\n      return null;\r\n   }\r\n\r\n   componentDidUpdate(prevProps, prevState, snapshot) {\r\n      const prevQuery = prevProps.query;\r\n      const currentQuery = this.props.query;\r\n\r\n      if (prevQuery !== currentQuery) {\r\n         prevState.page = 1;\r\n         this.setState({\r\n            status: 'pending',\r\n            images: [],\r\n            showBtn: true,\r\n         });\r\n\r\n         this.fetchImages();\r\n      }\r\n\r\n      if (\r\n         prevState.images.length !== this.state.images.length &&\r\n         snapshot !== null\r\n      ) {\r\n         window.scrollTo({\r\n            top: snapshot,\r\n            behavior: 'smooth',\r\n         });\r\n      }\r\n   }\r\n\r\n   fetchImages = () => {\r\n      const currentQuery = this.props.query;\r\n      const currentPage = this.state.page;\r\n\r\n      this.setState({ loading: true });\r\n\r\n      imageAPI\r\n         .fetchImage(currentQuery, currentPage)\r\n         .then(({ hits }) => {\r\n            if (hits.length === 0) {\r\n               return Promise.reject(\r\n                  new Error(`Bad search query :( We have no ${currentQuery} images`),\r\n               );\r\n            }\r\n\r\n            if (hits.length < 12) {\r\n               this.setState({ showBtn: false });\r\n            }\r\n\r\n            this.setState(prevState => ({\r\n               images: [...prevState.images, ...hits],\r\n               page: prevState.page + 1,\r\n               status: 'resolved',\r\n            }));\r\n         })\r\n         .catch(error => this.setState({ error, status: 'rejected' }))\r\n         .finally(() => this.setState({ loading: false }));\r\n   };\r\n\r\n   toggleModal = () => {\r\n      this.setState(({ showModal }) => ({\r\n         showModal: !showModal,\r\n      }));\r\n   };\r\n\r\n   handleImgClick = img => {\r\n      this.setState({ URL: img.dataset.source, ALT: img.alt });\r\n\r\n      this.toggleModal();\r\n   };\r\n\r\n   render() {\r\n      const {\r\n         images,\r\n         status,\r\n         error,\r\n         showBtn,\r\n         loading,\r\n         showModal,\r\n         URL,\r\n         ALT,\r\n      } = this.state;\r\n\r\n      if (status === 'idle') {\r\n         return (\r\n            <Input text=\"Enter in the searchbar the images you want to search\" />\r\n         );\r\n      }\r\n\r\n      if (status === 'pending') {\r\n         return <LoaderImage />;\r\n      }\r\n\r\n      if (status === 'rejected') {\r\n         return <ImageErrorView message={error.message} />;\r\n      }\r\n\r\n      if (status === 'resolved') {\r\n         return (\r\n            <>\r\n               <ImageGallery hits={images} onClick={this.handleImgClick} />\r\n               {showModal && (\r\n                  <Modal largeImgUrl={URL} imgAlt={ALT} onClose={this.toggleModal} />\r\n               )}\r\n               {showBtn && !loading && <Button onBtnClick={this.fetchImages} />}\r\n               {loading && <LoaderImage />}\r\n            </>\r\n         );\r\n      }\r\n   }\r\n}\r\n\r\n","import Searchbar from 'components/Searchbar/Searchbar'\r\nimport ImageInfo from 'components/ImageInfo/ImageInfo'\r\nimport { Component } from 'react'\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\n\r\nexport default class ImageFinder extends Component {\r\n   state = {\r\n      searchQuery: '',\r\n   };\r\n\r\n   handleFormSubmit = query => {\r\n      this.setState({\r\n         searchQuery: query,\r\n      });\r\n   };\r\n\r\n   render() {\r\n      const { searchQuery } = this.state;\r\n\r\n      return (\r\n         <div className=\"App\">\r\n            <Searchbar onSubmit={this.handleFormSubmit} />\r\n            <ImageInfo query={searchQuery} />\r\n            <ToastContainer autoClose={2500} />\r\n         </div>\r\n      );\r\n   }\r\n}\r\n","import ImageFinder from './components/ImageFinder/ImageFinder'\n\nexport default function App() {\n  return (\n    <div>\n      <ImageFinder />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__EZgCP\",\"SearchForm\":\"Searchbar_SearchForm__-mP3a\",\"button\":\"Searchbar_button__2WDAm\",\"buttonLabel\":\"Searchbar_buttonLabel__JMiqq\",\"SearchInput\":\"Searchbar_SearchInput__3a_2l\"};"],"sourceRoot":""}